import { b as _objectWithoutPropertiesLoose } from './_rollupPluginBabelHelpers-ded08042.js';
import VueTypes from 'vue-types';
import 'emotion';
import '@appbaseio/vue-emotion';
import 'polished';
import { t as types } from './vueTypes-8986b709.js';
import _mergeJSXProps from '@vue/babel-helper-vue-jsx-merge-props';
import { T as Title } from './Title-863dfa42.js';
import { I as Image, C as Card } from './Card-19ad6d90.js';

var ResultCardTitle = {
  name: 'ResultCardTitle',
  render: function render() {
    var h = arguments[0];
    var children = this.$slots["default"];
    return h(Title, _mergeJSXProps([{}, this.$props]), [children]);
  }
};
ResultCardTitle.install = function (Vue) {
  Vue.component(ResultCardTitle.name, ResultCardTitle);
};

var _excluded = ["src"];
var ResultCardImage = {
  name: 'ResultCardImage',
  props: {
    src: VueTypes.string.isRequired
  },
  render: function render() {
    var h = arguments[0];
    var _this$$props = this.$props,
      src = _this$$props.src,
      props = _objectWithoutPropertiesLoose(_this$$props, _excluded);
    return h(Image, _mergeJSXProps([{
      "style": {
        backgroundImage: "url(" + src + ")"
      }
    }, props]));
  }
};
ResultCardImage.install = function (Vue) {
  Vue.component(ResultCardImage.name, ResultCardImage);
};

var ResultCardDescription = {
  name: 'ResultCardDescription',
  functional: true,
  render: function render(_, _ref) {
    var props = _ref.props,
      children = _ref.children;
    var h = arguments[0];
    return h("article", _mergeJSXProps([{}, props]), [children]);
  }
};
ResultCardDescription.install = function (Vue) {
  Vue.component(ResultCardDescription.name, ResultCardDescription);
};

var _excluded$1 = ["href", "target"];
var ResultCard = {
  name: 'ResultCard',
  components: {
    ResultCardTitle: ResultCardTitle,
    ResultCardImage: ResultCardImage,
    ResultCardDescription: ResultCardDescription
  },
  props: {
    target: VueTypes.string.def('_blank'),
    href: types.string
  },
  render: function render() {
    var h = arguments[0];
    var children = this.$slots["default"];
    var _this$$props = this.$props,
      href = _this$$props.href,
      target = _this$$props.target,
      rest = _objectWithoutPropertiesLoose(_this$$props, _excluded$1);
    return h(Card, _mergeJSXProps([{
      "attrs": {
        "href": href,
        "target": target,
        "rel": target === '_blank' ? 'noopener noreferrer' : null
      }
    }, rest]), [children]);
  }
};
ResultCard.install = function (Vue) {
  Vue.component(ResultCard.name, ResultCard);
  Vue.component(ResultCardTitle.name, ResultCardTitle);
  Vue.component(ResultCardImage.name, ResultCardImage);
  Vue.component(ResultCardDescription.name, ResultCardDescription);
};

export default ResultCard;
