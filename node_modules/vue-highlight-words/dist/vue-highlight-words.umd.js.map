{"version":3,"file":"vue-highlight-words.umd.js","sources":["../node_modules/highlight-words-core/dist/index.js","../src/VueHighlightWords.js","../src/index.js"],"sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'combineChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.combineChunks;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'fillInChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.fillInChunks;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'findAll', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.findAll;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'findChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.findChunks;\n\t  }\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t\n\t/**\n\t * Creates an array of chunk objects representing both higlightable and non highlightable pieces of text that match each search word.\n\t * @return Array of \"chunks\" (where a Chunk is { start:number, end:number, highlight:boolean })\n\t */\n\tvar findAll = exports.findAll = function findAll(_ref) {\n\t  var autoEscape = _ref.autoEscape,\n\t      _ref$caseSensitive = _ref.caseSensitive,\n\t      caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n\t      _ref$findChunks = _ref.findChunks,\n\t      findChunks = _ref$findChunks === undefined ? defaultFindChunks : _ref$findChunks,\n\t      sanitize = _ref.sanitize,\n\t      searchWords = _ref.searchWords,\n\t      textToHighlight = _ref.textToHighlight;\n\t  return fillInChunks({\n\t    chunksToHighlight: combineChunks({\n\t      chunks: findChunks({\n\t        autoEscape: autoEscape,\n\t        caseSensitive: caseSensitive,\n\t        sanitize: sanitize,\n\t        searchWords: searchWords,\n\t        textToHighlight: textToHighlight\n\t      })\n\t    }),\n\t    totalLength: textToHighlight ? textToHighlight.length : 0\n\t  });\n\t};\n\t\n\t/**\n\t * Takes an array of {start:number, end:number} objects and combines chunks that overlap into single chunks.\n\t * @return {start:number, end:number}[]\n\t */\n\t\n\t\n\tvar combineChunks = exports.combineChunks = function combineChunks(_ref2) {\n\t  var chunks = _ref2.chunks;\n\t\n\t  chunks = chunks.sort(function (first, second) {\n\t    return first.start - second.start;\n\t  }).reduce(function (processedChunks, nextChunk) {\n\t    // First chunk just goes straight in the array...\n\t    if (processedChunks.length === 0) {\n\t      return [nextChunk];\n\t    } else {\n\t      // ... subsequent chunks get checked to see if they overlap...\n\t      var prevChunk = processedChunks.pop();\n\t      if (nextChunk.start <= prevChunk.end) {\n\t        // It may be the case that prevChunk completely surrounds nextChunk, so take the\n\t        // largest of the end indeces.\n\t        var endIndex = Math.max(prevChunk.end, nextChunk.end);\n\t        processedChunks.push({ highlight: false, start: prevChunk.start, end: endIndex });\n\t      } else {\n\t        processedChunks.push(prevChunk, nextChunk);\n\t      }\n\t      return processedChunks;\n\t    }\n\t  }, []);\n\t\n\t  return chunks;\n\t};\n\t\n\t/**\n\t * Examine text for any matches.\n\t * If we find matches, add them to the returned array as a \"chunk\" object ({start:number, end:number}).\n\t * @return {start:number, end:number}[]\n\t */\n\tvar defaultFindChunks = function defaultFindChunks(_ref3) {\n\t  var autoEscape = _ref3.autoEscape,\n\t      caseSensitive = _ref3.caseSensitive,\n\t      _ref3$sanitize = _ref3.sanitize,\n\t      sanitize = _ref3$sanitize === undefined ? defaultSanitize : _ref3$sanitize,\n\t      searchWords = _ref3.searchWords,\n\t      textToHighlight = _ref3.textToHighlight;\n\t\n\t  textToHighlight = sanitize(textToHighlight);\n\t\n\t  return searchWords.filter(function (searchWord) {\n\t    return searchWord;\n\t  }) // Remove empty words\n\t  .reduce(function (chunks, searchWord) {\n\t    searchWord = sanitize(searchWord);\n\t\n\t    if (autoEscape) {\n\t      searchWord = escapeRegExpFn(searchWord);\n\t    }\n\t\n\t    var regex = new RegExp(searchWord, caseSensitive ? 'g' : 'gi');\n\t\n\t    var match = void 0;\n\t    while (match = regex.exec(textToHighlight)) {\n\t      var _start = match.index;\n\t      var _end = regex.lastIndex;\n\t      // We do not return zero-length matches\n\t      if (_end > _start) {\n\t        chunks.push({ highlight: false, start: _start, end: _end });\n\t      }\n\t\n\t      // Prevent browsers like Firefox from getting stuck in an infinite loop\n\t      // See http://www.regexguru.com/2008/04/watch-out-for-zero-length-matches/\n\t      if (match.index === regex.lastIndex) {\n\t        regex.lastIndex++;\n\t      }\n\t    }\n\t\n\t    return chunks;\n\t  }, []);\n\t};\n\t// Allow the findChunks to be overridden in findAll,\n\t// but for backwards compatibility we export as the old name\n\texports.findChunks = defaultFindChunks;\n\t\n\t/**\n\t * Given a set of chunks to highlight, create an additional set of chunks\n\t * to represent the bits of text between the highlighted text.\n\t * @param chunksToHighlight {start:number, end:number}[]\n\t * @param totalLength number\n\t * @return {start:number, end:number, highlight:boolean}[]\n\t */\n\t\n\tvar fillInChunks = exports.fillInChunks = function fillInChunks(_ref4) {\n\t  var chunksToHighlight = _ref4.chunksToHighlight,\n\t      totalLength = _ref4.totalLength;\n\t\n\t  var allChunks = [];\n\t  var append = function append(start, end, highlight) {\n\t    if (end - start > 0) {\n\t      allChunks.push({\n\t        start: start,\n\t        end: end,\n\t        highlight: highlight\n\t      });\n\t    }\n\t  };\n\t\n\t  if (chunksToHighlight.length === 0) {\n\t    append(0, totalLength, false);\n\t  } else {\n\t    var lastIndex = 0;\n\t    chunksToHighlight.forEach(function (chunk) {\n\t      append(lastIndex, chunk.start, false);\n\t      append(chunk.start, chunk.end, true);\n\t      lastIndex = chunk.end;\n\t    });\n\t    append(lastIndex, totalLength, false);\n\t  }\n\t  return allChunks;\n\t};\n\t\n\tfunction defaultSanitize(string) {\n\t  return string;\n\t}\n\t\n\tfunction escapeRegExpFn(string) {\n\t  return string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\t}\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=index.js.map","import { findAll } from 'highlight-words-core'\n\nexport default {\n  functional: true,\n  props: {\n    activeClassName: String,\n    activeIndex: Number,\n    activeStyle: Object,\n    autoEscape: Boolean,\n    findChunks: Function,\n    highlightClassName: String,\n    highlightStyle: Object,\n    highlightTag: [Object, Function, String],\n    sanitize: Function,\n    searchWords: {\n      type: Array, // Array<string>\n      validator(value) {\n        return value.every(word => typeof word === 'string')\n      },\n      required: true\n    },\n    textToHighlight: {\n      type: String,\n      required: true\n    },\n    unhighlightClassName: String,\n    unhighlightStyle: Object\n  },\n  render(h, context) {\n    const {\n      activeClassName = '',\n      activeIndex = -1,\n      activeStyle,\n      autoEscape,\n      caseSensitive = false,\n      findChunks,\n      highlightClassName = '',\n      highlightStyle = {},\n      highlightTag = 'mark',\n      sanitize,\n      searchWords,\n      textToHighlight,\n      unhighlightClassName = '',\n      unhighlightStyle\n    } = context.props\n\n    const contextData = context.data\n\n    const chunks = findAll({\n      autoEscape,\n      caseSensitive,\n      findChunks,\n      sanitize,\n      searchWords,\n      textToHighlight\n    })\n\n    const HighlightTag = highlightTag\n    let highlightCount = -1\n    let highlightClassNames = ''\n    let highlightStyles\n\n    return h(\n      'span',\n      { ...contextData },\n      chunks.map((chunk, index) => {\n        const text = textToHighlight.substr(\n          chunk.start,\n          chunk.end - chunk.start\n        )\n\n        if (chunk.highlight) {\n          highlightCount++\n\n          const isActive = highlightCount === +activeIndex\n\n          highlightClassNames = `${highlightClassName} ${\n            isActive ? activeClassName : ''\n          }`\n          highlightStyles =\n            isActive === true && activeStyle != null\n              ? Object.assign({}, highlightStyle, activeStyle)\n              : highlightStyle\n\n          const data = {\n            class: highlightClassNames,\n            key: index,\n            style: highlightStyles\n          }\n\n          if (typeof HighlightTag !== 'string') {\n            // not plain html tag, add props for compoent\n            data.props = {\n              highlightIndex: highlightCount\n            }\n          }\n\n          if (contextData.scopedSlots) {\n            return h(HighlightTag, data, [\n              contextData.scopedSlots.default({\n                children: text,\n                highlightIndex: highlightCount\n              })\n            ])\n          }\n\n          return h(HighlightTag, data, text)\n        } else {\n          return h(\n            'span',\n            {\n              class: unhighlightClassName,\n              key: index,\n              style: unhighlightStyle\n            },\n            text\n          )\n        }\n      })\n    )\n  }\n}\n","import VueHighlightWords from './VueHighlightWords'\n\nfunction install(Vue, options = {}) {\n  Vue.component(options.name || 'VueHighlightWords', VueHighlightWords)\n}\n\nif (process.env.ROLLUP_BUILD_MODE === 'umd') {\n  let GlobalVue = null\n  if (typeof window !== 'undefined') {\n    GlobalVue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    GlobalVue = global.Vue\n  }\n  if (GlobalVue) {\n    GlobalVue.use({ install })\n  }\n}\n\nexport default VueHighlightWords\nexport { install, VueHighlightWords }\n"],"names":["functional","props","activeClassName","String","activeIndex","Number","activeStyle","Object","autoEscape","Boolean","findChunks","Function","highlightClassName","highlightStyle","highlightTag","sanitize","searchWords","type","Array","validator","value","every","word","required","textToHighlight","unhighlightClassName","unhighlightStyle","render","h","context","caseSensitive","contextData","data","chunks","findAll","HighlightTag","highlightCount","highlightClassNames","highlightStyles","map","chunk","index","text","substr","start","end","highlight","isActive","assign","class","key","style","highlightIndex","scopedSlots","default","children","install","Vue","options","component","name","VueHighlightWords","GlobalVue","window","global","use"],"mappings":"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"}